// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using web_layer.Entity;


#nullable disable

namespace web_layer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230319133917_init1")]
    partial class init1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("OrderSystem.Data.Entities.OrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("ProviderEntityId")
                        .HasColumnType("integer")
                        .HasColumnName("ProviderId");

                    b.HasKey("Id");

                    b.HasIndex("ProviderEntityId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("OrderSystem.Data.Entities.OrderItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("OrderEntityId")
                        .HasColumnType("integer")
                        .HasColumnName("OrderId");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 3)");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("OrderEntityId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("OrderSystem.Data.Entities.ProviderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Provider");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Yandex"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Google"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Intel"
                        });
                });

            modelBuilder.Entity("OrderSystem.Data.Entities.OrderEntity", b =>
                {
                    b.HasOne("OrderSystem.Data.Entities.ProviderEntity", "ProviderEntity")
                        .WithMany("OrderEntities")
                        .HasForeignKey("ProviderEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProviderEntity");
                });

            modelBuilder.Entity("OrderSystem.Data.Entities.OrderItemEntity", b =>
                {
                    b.HasOne("OrderSystem.Data.Entities.OrderEntity", "OrderEntity")
                        .WithMany("OrderItemEntities")
                        .HasForeignKey("OrderEntityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderEntity");
                });

            modelBuilder.Entity("OrderSystem.Data.Entities.OrderEntity", b =>
                {
                    b.Navigation("OrderItemEntities");
                });

            modelBuilder.Entity("OrderSystem.Data.Entities.ProviderEntity", b =>
                {
                    b.Navigation("OrderEntities");
                });
#pragma warning restore 612, 618
        }
    }
}
